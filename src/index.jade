jade:include templete/head.jade

#ay.container
    .p-3

    #main.row

        .col-3
            .font-weight-bold Announcement
            .text-muted
                small Thanks for:&nbsp;
                small
                    a(href="https://ayiis.me/") ayiis.me
            .text-muted
                small Author:&nbsp;
                small
                    a(href="/author/<%author%>") <%author%>
            .text-muted
                small
                    a(href="/login") Login
                    &nbsp;|
                    a(href="/note_add") Add note
            .p-3
            .p-3
            .font-weight-bold Reading ranking
            #note_read_rank
                .a-1line-text
                    a(href="", val="link")
                        small(val="title")

        .col-9.a-pd-lr30
            #note_list
                .col-12.a-pd-t10
                    .h4.mb-0
                        a(val="link", href="")
                            span(val="title")
                    .text-muted.a-1line-text
                        small(val="desc")
                    .text-right.text-muted
                        small
                            a(val="author", href="")
                            span &nbsp;@&nbsp;
                            span(val="datetime")

            .p-3
            #pager.row


    jade:include templete/site_foot.jade

script(src="/static/js/pager.js")
script.

    $(()=> {

        var list_pager = pager.init_pagination({
            "ele": $("#pager"),
            "callback": next_page,
        });
        list_pager.init_document_listener();

        let $note_read_rank = $($("#note_read_rank").html());
        common.api_post({
            url: "/api/note/read_rank",
            success: (res)=> {
                if(res.code == 0) {
                    $("#note_read_rank").empty();
                    for(let i = 0 ; i < res.data.length ; i++ ) {
                        let alink = $note_read_rank.clone();
                        alink.find("[val=link]").attr("href", res.data[i]["link"]);
                        alink.find("[val=title]").text(res.data[i]["title"]);
                        $("#note_read_rank").append(alink);
                    }
                } else {
                    $.notify(res.desc, "error");
                }
            },
        });
        let $note_list = $($("#note_list").html());
        function next_page(page_index) {
            page_index = page_index || 1;
            common.api_post({
                url: "/api/note/note_list",
                data: {"page_index": page_index},
                success: (res)=> {
                    if(res.code == 0) {
                        $("#note_list").empty();
                        for(let i = 0 ; i < res.data.length ; i++ ) {
                            let alink = $note_list.clone();
                            alink.find("[val=link]").attr("href", res.data[i]["link"]);
                            alink.find("[val=title]").text(res.data[i]["title"]);
                            alink.find("[val=author]").text(res.data[i]["author"]);
                            alink.find("[val=desc]").text(res.data[i]["desc"]);
                            alink.find("[val=author]").attr("href", encodeURI("/author/" + res.data[i]["author"]));
                            alink.find("[val=datetime]").text(res.data[i]["datetime"].split(" ")[0]);
                            $("#note_list").append(alink);
                        }
                        list_pager.touch_pagination(res.rows, page_index);
                        common.scroll_to_ele($("#ay"));
                    } else {
                        $.notify(res.desc, "error");
                    }
                },
            });
        }
        next_page(1);
    });
